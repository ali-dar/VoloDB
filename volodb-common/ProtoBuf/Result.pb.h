// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Result.proto

#ifndef PROTOBUF_Result_2eproto__INCLUDED
#define PROTOBUF_Result_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Column.pb.h"
#include "Frame.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Result_2eproto();
void protobuf_AssignDesc_Result_2eproto();
void protobuf_ShutdownFile_Result_2eproto();

class Row;
class OperationResult;
class Result;

// ===================================================================

class Row : public ::google::protobuf::Message {
 public:
  Row();
  virtual ~Row();

  Row(const Row& from);

  inline Row& operator=(const Row& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Row& default_instance();

  void Swap(Row* other);

  // implements Message ----------------------------------------------

  Row* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Row& from);
  void MergeFrom(const Row& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ColumnValue column = 1;
  inline int column_size() const;
  inline void clear_column();
  static const int kColumnFieldNumber = 1;
  inline const ::ColumnValue& column(int index) const;
  inline ::ColumnValue* mutable_column(int index);
  inline ::ColumnValue* add_column();
  inline const ::google::protobuf::RepeatedPtrField< ::ColumnValue >&
      column() const;
  inline ::google::protobuf::RepeatedPtrField< ::ColumnValue >*
      mutable_column();

  // @@protoc_insertion_point(class_scope:Row)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ColumnValue > column_;
  friend void  protobuf_AddDesc_Result_2eproto();
  friend void protobuf_AssignDesc_Result_2eproto();
  friend void protobuf_ShutdownFile_Result_2eproto();

  void InitAsDefaultInstance();
  static Row* default_instance_;
};
// -------------------------------------------------------------------

class OperationResult : public ::google::protobuf::Message {
 public:
  OperationResult();
  virtual ~OperationResult();

  OperationResult(const OperationResult& from);

  inline OperationResult& operator=(const OperationResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperationResult& default_instance();

  void Swap(OperationResult* other);

  // implements Message ----------------------------------------------

  OperationResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperationResult& from);
  void MergeFrom(const OperationResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Row row = 1;
  inline int row_size() const;
  inline void clear_row();
  static const int kRowFieldNumber = 1;
  inline const ::Row& row(int index) const;
  inline ::Row* mutable_row(int index);
  inline ::Row* add_row();
  inline const ::google::protobuf::RepeatedPtrField< ::Row >&
      row() const;
  inline ::google::protobuf::RepeatedPtrField< ::Row >*
      mutable_row();

  // required .FrameItem.Type type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::FrameItem_Type type() const;
  inline void set_type(::FrameItem_Type value);

  // @@protoc_insertion_point(class_scope:OperationResult)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Row > row_;
  int type_;
  friend void  protobuf_AddDesc_Result_2eproto();
  friend void protobuf_AssignDesc_Result_2eproto();
  friend void protobuf_ShutdownFile_Result_2eproto();

  void InitAsDefaultInstance();
  static OperationResult* default_instance_;
};
// -------------------------------------------------------------------

class Result : public ::google::protobuf::Message {
 public:
  Result();
  virtual ~Result();

  Result(const Result& from);

  inline Result& operator=(const Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Result& default_instance();

  void Swap(Result* other);

  // implements Message ----------------------------------------------

  Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Result& from);
  void MergeFrom(const Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string transaction_identifier = 1;
  inline bool has_transaction_identifier() const;
  inline void clear_transaction_identifier();
  static const int kTransactionIdentifierFieldNumber = 1;
  inline const ::std::string& transaction_identifier() const;
  inline void set_transaction_identifier(const ::std::string& value);
  inline void set_transaction_identifier(const char* value);
  inline void set_transaction_identifier(const char* value, size_t size);
  inline ::std::string* mutable_transaction_identifier();
  inline ::std::string* release_transaction_identifier();
  inline void set_allocated_transaction_identifier(::std::string* transaction_identifier);

  // repeated .OperationResult result = 2;
  inline int result_size() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline const ::OperationResult& result(int index) const;
  inline ::OperationResult* mutable_result(int index);
  inline ::OperationResult* add_result();
  inline const ::google::protobuf::RepeatedPtrField< ::OperationResult >&
      result() const;
  inline ::google::protobuf::RepeatedPtrField< ::OperationResult >*
      mutable_result();

  // optional int32 error_code = 3;
  inline bool has_error_code() const;
  inline void clear_error_code();
  static const int kErrorCodeFieldNumber = 3;
  inline ::google::protobuf::int32 error_code() const;
  inline void set_error_code(::google::protobuf::int32 value);

  // optional string error_description = 4;
  inline bool has_error_description() const;
  inline void clear_error_description();
  static const int kErrorDescriptionFieldNumber = 4;
  inline const ::std::string& error_description() const;
  inline void set_error_description(const ::std::string& value);
  inline void set_error_description(const char* value);
  inline void set_error_description(const char* value, size_t size);
  inline ::std::string* mutable_error_description();
  inline ::std::string* release_error_description();
  inline void set_allocated_error_description(::std::string* error_description);

  // @@protoc_insertion_point(class_scope:Result)
 private:
  inline void set_has_transaction_identifier();
  inline void clear_has_transaction_identifier();
  inline void set_has_error_code();
  inline void clear_has_error_code();
  inline void set_has_error_description();
  inline void clear_has_error_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* transaction_identifier_;
  ::google::protobuf::RepeatedPtrField< ::OperationResult > result_;
  ::std::string* error_description_;
  ::google::protobuf::int32 error_code_;
  friend void  protobuf_AddDesc_Result_2eproto();
  friend void protobuf_AssignDesc_Result_2eproto();
  friend void protobuf_ShutdownFile_Result_2eproto();

  void InitAsDefaultInstance();
  static Result* default_instance_;
};
// ===================================================================


// ===================================================================

// Row

// repeated .ColumnValue column = 1;
inline int Row::column_size() const {
  return column_.size();
}
inline void Row::clear_column() {
  column_.Clear();
}
inline const ::ColumnValue& Row::column(int index) const {
  // @@protoc_insertion_point(field_get:Row.column)
  return column_.Get(index);
}
inline ::ColumnValue* Row::mutable_column(int index) {
  // @@protoc_insertion_point(field_mutable:Row.column)
  return column_.Mutable(index);
}
inline ::ColumnValue* Row::add_column() {
  // @@protoc_insertion_point(field_add:Row.column)
  return column_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ColumnValue >&
Row::column() const {
  // @@protoc_insertion_point(field_list:Row.column)
  return column_;
}
inline ::google::protobuf::RepeatedPtrField< ::ColumnValue >*
Row::mutable_column() {
  // @@protoc_insertion_point(field_mutable_list:Row.column)
  return &column_;
}

// -------------------------------------------------------------------

// OperationResult

// repeated .Row row = 1;
inline int OperationResult::row_size() const {
  return row_.size();
}
inline void OperationResult::clear_row() {
  row_.Clear();
}
inline const ::Row& OperationResult::row(int index) const {
  // @@protoc_insertion_point(field_get:OperationResult.row)
  return row_.Get(index);
}
inline ::Row* OperationResult::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:OperationResult.row)
  return row_.Mutable(index);
}
inline ::Row* OperationResult::add_row() {
  // @@protoc_insertion_point(field_add:OperationResult.row)
  return row_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Row >&
OperationResult::row() const {
  // @@protoc_insertion_point(field_list:OperationResult.row)
  return row_;
}
inline ::google::protobuf::RepeatedPtrField< ::Row >*
OperationResult::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:OperationResult.row)
  return &row_;
}

// required .FrameItem.Type type = 2;
inline bool OperationResult::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperationResult::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperationResult::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperationResult::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::FrameItem_Type OperationResult::type() const {
  // @@protoc_insertion_point(field_get:OperationResult.type)
  return static_cast< ::FrameItem_Type >(type_);
}
inline void OperationResult::set_type(::FrameItem_Type value) {
  assert(::FrameItem_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:OperationResult.type)
}

// -------------------------------------------------------------------

// Result

// required string transaction_identifier = 1;
inline bool Result::has_transaction_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Result::set_has_transaction_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Result::clear_has_transaction_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Result::clear_transaction_identifier() {
  if (transaction_identifier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_identifier_->clear();
  }
  clear_has_transaction_identifier();
}
inline const ::std::string& Result::transaction_identifier() const {
  // @@protoc_insertion_point(field_get:Result.transaction_identifier)
  return *transaction_identifier_;
}
inline void Result::set_transaction_identifier(const ::std::string& value) {
  set_has_transaction_identifier();
  if (transaction_identifier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_identifier_ = new ::std::string;
  }
  transaction_identifier_->assign(value);
  // @@protoc_insertion_point(field_set:Result.transaction_identifier)
}
inline void Result::set_transaction_identifier(const char* value) {
  set_has_transaction_identifier();
  if (transaction_identifier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_identifier_ = new ::std::string;
  }
  transaction_identifier_->assign(value);
  // @@protoc_insertion_point(field_set_char:Result.transaction_identifier)
}
inline void Result::set_transaction_identifier(const char* value, size_t size) {
  set_has_transaction_identifier();
  if (transaction_identifier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_identifier_ = new ::std::string;
  }
  transaction_identifier_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Result.transaction_identifier)
}
inline ::std::string* Result::mutable_transaction_identifier() {
  set_has_transaction_identifier();
  if (transaction_identifier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    transaction_identifier_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Result.transaction_identifier)
  return transaction_identifier_;
}
inline ::std::string* Result::release_transaction_identifier() {
  clear_has_transaction_identifier();
  if (transaction_identifier_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = transaction_identifier_;
    transaction_identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Result::set_allocated_transaction_identifier(::std::string* transaction_identifier) {
  if (transaction_identifier_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete transaction_identifier_;
  }
  if (transaction_identifier) {
    set_has_transaction_identifier();
    transaction_identifier_ = transaction_identifier;
  } else {
    clear_has_transaction_identifier();
    transaction_identifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Result.transaction_identifier)
}

// repeated .OperationResult result = 2;
inline int Result::result_size() const {
  return result_.size();
}
inline void Result::clear_result() {
  result_.Clear();
}
inline const ::OperationResult& Result::result(int index) const {
  // @@protoc_insertion_point(field_get:Result.result)
  return result_.Get(index);
}
inline ::OperationResult* Result::mutable_result(int index) {
  // @@protoc_insertion_point(field_mutable:Result.result)
  return result_.Mutable(index);
}
inline ::OperationResult* Result::add_result() {
  // @@protoc_insertion_point(field_add:Result.result)
  return result_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::OperationResult >&
Result::result() const {
  // @@protoc_insertion_point(field_list:Result.result)
  return result_;
}
inline ::google::protobuf::RepeatedPtrField< ::OperationResult >*
Result::mutable_result() {
  // @@protoc_insertion_point(field_mutable_list:Result.result)
  return &result_;
}

// optional int32 error_code = 3;
inline bool Result::has_error_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Result::set_has_error_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Result::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Result::clear_error_code() {
  error_code_ = 0;
  clear_has_error_code();
}
inline ::google::protobuf::int32 Result::error_code() const {
  // @@protoc_insertion_point(field_get:Result.error_code)
  return error_code_;
}
inline void Result::set_error_code(::google::protobuf::int32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:Result.error_code)
}

// optional string error_description = 4;
inline bool Result::has_error_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Result::set_has_error_description() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Result::clear_has_error_description() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Result::clear_error_description() {
  if (error_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_->clear();
  }
  clear_has_error_description();
}
inline const ::std::string& Result::error_description() const {
  // @@protoc_insertion_point(field_get:Result.error_description)
  return *error_description_;
}
inline void Result::set_error_description(const ::std::string& value) {
  set_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_ = new ::std::string;
  }
  error_description_->assign(value);
  // @@protoc_insertion_point(field_set:Result.error_description)
}
inline void Result::set_error_description(const char* value) {
  set_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_ = new ::std::string;
  }
  error_description_->assign(value);
  // @@protoc_insertion_point(field_set_char:Result.error_description)
}
inline void Result::set_error_description(const char* value, size_t size) {
  set_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_ = new ::std::string;
  }
  error_description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Result.error_description)
}
inline ::std::string* Result::mutable_error_description() {
  set_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Result.error_description)
  return error_description_;
}
inline ::std::string* Result::release_error_description() {
  clear_has_error_description();
  if (error_description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_description_;
    error_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Result::set_allocated_error_description(::std::string* error_description) {
  if (error_description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_description_;
  }
  if (error_description) {
    set_has_error_description();
    error_description_ = error_description;
  } else {
    clear_has_error_description();
    error_description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Result.error_description)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Result_2eproto__INCLUDED
