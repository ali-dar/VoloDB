// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ManipulationOperations.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ManipulationOperations.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ManipulationOperation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ManipulationOperation_reflection_ = NULL;
const ::google::protobuf::Descriptor* SetOperation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetOperation_reflection_ = NULL;
const ::google::protobuf::Descriptor* DeleteOperation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DeleteOperation_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetOperation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetOperation_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ManipulationOperations_2eproto() {
  protobuf_AddDesc_ManipulationOperations_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ManipulationOperations.proto");
  GOOGLE_CHECK(file != NULL);
  ManipulationOperation_descriptor_ = file->message_type(0);
  static const int ManipulationOperation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManipulationOperation, store_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManipulationOperation, primary_key_),
  };
  ManipulationOperation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ManipulationOperation_descriptor_,
      ManipulationOperation::default_instance_,
      ManipulationOperation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManipulationOperation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ManipulationOperation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ManipulationOperation));
  SetOperation_descriptor_ = file->message_type(1);
  static const int SetOperation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOperation, store_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOperation, primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOperation, value_),
  };
  SetOperation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetOperation_descriptor_,
      SetOperation::default_instance_,
      SetOperation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOperation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOperation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetOperation));
  DeleteOperation_descriptor_ = file->message_type(2);
  static const int DeleteOperation_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOperation, store_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOperation, primary_key_),
  };
  DeleteOperation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DeleteOperation_descriptor_,
      DeleteOperation::default_instance_,
      DeleteOperation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOperation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteOperation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DeleteOperation));
  GetOperation_descriptor_ = file->message_type(3);
  static const int GetOperation_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOperation, store_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOperation, primary_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOperation, value_),
  };
  GetOperation_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetOperation_descriptor_,
      GetOperation::default_instance_,
      GetOperation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOperation, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOperation, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetOperation));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ManipulationOperations_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ManipulationOperation_descriptor_, &ManipulationOperation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetOperation_descriptor_, &SetOperation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DeleteOperation_descriptor_, &DeleteOperation::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetOperation_descriptor_, &GetOperation::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ManipulationOperations_2eproto() {
  delete ManipulationOperation::default_instance_;
  delete ManipulationOperation_reflection_;
  delete SetOperation::default_instance_;
  delete SetOperation_reflection_;
  delete DeleteOperation::default_instance_;
  delete DeleteOperation_reflection_;
  delete GetOperation::default_instance_;
  delete GetOperation_reflection_;
}

void protobuf_AddDesc_ManipulationOperations_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_Column_2eproto();
  ::protobuf_AddDesc_Operation_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034ManipulationOperations.proto\032\014Column.p"
    "roto\032\017Operation.proto\"Z\n\025ManipulationOpe"
    "ration\022\036\n\nstore_info\030\001 \003(\0132\n.StoreInfo\022!"
    "\n\013primary_key\030\002 \003(\0132\014.ColumnValue\"n\n\014Set"
    "Operation\022\036\n\nstore_info\030\001 \003(\0132\n.StoreInf"
    "o\022!\n\013primary_key\030\002 \003(\0132\014.ColumnValue\022\033\n\005"
    "value\030\003 \003(\0132\014.ColumnValue\"T\n\017DeleteOpera"
    "tion\022\036\n\nstore_info\030\001 \003(\0132\n.StoreInfo\022!\n\013"
    "primary_key\030\002 \003(\0132\014.ColumnValue\"n\n\014GetOp"
    "eration\022\036\n\nstore_info\030\001 \003(\0132\n.StoreInfo\022"
    "!\n\013primary_key\030\002 \003(\0132\014.ColumnValue\022\033\n\005va"
    "lue\030\003 \003(\0132\014.ColumnValue", 463);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ManipulationOperations.proto", &protobuf_RegisterTypes);
  ManipulationOperation::default_instance_ = new ManipulationOperation();
  SetOperation::default_instance_ = new SetOperation();
  DeleteOperation::default_instance_ = new DeleteOperation();
  GetOperation::default_instance_ = new GetOperation();
  ManipulationOperation::default_instance_->InitAsDefaultInstance();
  SetOperation::default_instance_->InitAsDefaultInstance();
  DeleteOperation::default_instance_->InitAsDefaultInstance();
  GetOperation::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ManipulationOperations_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ManipulationOperations_2eproto {
  StaticDescriptorInitializer_ManipulationOperations_2eproto() {
    protobuf_AddDesc_ManipulationOperations_2eproto();
  }
} static_descriptor_initializer_ManipulationOperations_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ManipulationOperation::kStoreInfoFieldNumber;
const int ManipulationOperation::kPrimaryKeyFieldNumber;
#endif  // !_MSC_VER

ManipulationOperation::ManipulationOperation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ManipulationOperation)
}

void ManipulationOperation::InitAsDefaultInstance() {
}

ManipulationOperation::ManipulationOperation(const ManipulationOperation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ManipulationOperation)
}

void ManipulationOperation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ManipulationOperation::~ManipulationOperation() {
  // @@protoc_insertion_point(destructor:ManipulationOperation)
  SharedDtor();
}

void ManipulationOperation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ManipulationOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ManipulationOperation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ManipulationOperation_descriptor_;
}

const ManipulationOperation& ManipulationOperation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManipulationOperations_2eproto();
  return *default_instance_;
}

ManipulationOperation* ManipulationOperation::default_instance_ = NULL;

ManipulationOperation* ManipulationOperation::New() const {
  return new ManipulationOperation;
}

void ManipulationOperation::Clear() {
  store_info_.Clear();
  primary_key_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ManipulationOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ManipulationOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StoreInfo store_info = 1;
      case 1: {
        if (tag == 10) {
         parse_store_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_store_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_store_info;
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .ColumnValue primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ManipulationOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ManipulationOperation)
  return false;
#undef DO_
}

void ManipulationOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ManipulationOperation)
  // repeated .StoreInfo store_info = 1;
  for (int i = 0; i < this->store_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->store_info(i), output);
  }

  // repeated .ColumnValue primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ManipulationOperation)
}

::google::protobuf::uint8* ManipulationOperation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ManipulationOperation)
  // repeated .StoreInfo store_info = 1;
  for (int i = 0; i < this->store_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->store_info(i), target);
  }

  // repeated .ColumnValue primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ManipulationOperation)
  return target;
}

int ManipulationOperation::ByteSize() const {
  int total_size = 0;

  // repeated .StoreInfo store_info = 1;
  total_size += 1 * this->store_info_size();
  for (int i = 0; i < this->store_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->store_info(i));
  }

  // repeated .ColumnValue primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ManipulationOperation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ManipulationOperation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ManipulationOperation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ManipulationOperation::MergeFrom(const ManipulationOperation& from) {
  GOOGLE_CHECK_NE(&from, this);
  store_info_.MergeFrom(from.store_info_);
  primary_key_.MergeFrom(from.primary_key_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ManipulationOperation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManipulationOperation::CopyFrom(const ManipulationOperation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManipulationOperation::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->store_info())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  return true;
}

void ManipulationOperation::Swap(ManipulationOperation* other) {
  if (other != this) {
    store_info_.Swap(&other->store_info_);
    primary_key_.Swap(&other->primary_key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ManipulationOperation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ManipulationOperation_descriptor_;
  metadata.reflection = ManipulationOperation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SetOperation::kStoreInfoFieldNumber;
const int SetOperation::kPrimaryKeyFieldNumber;
const int SetOperation::kValueFieldNumber;
#endif  // !_MSC_VER

SetOperation::SetOperation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SetOperation)
}

void SetOperation::InitAsDefaultInstance() {
}

SetOperation::SetOperation(const SetOperation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SetOperation)
}

void SetOperation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetOperation::~SetOperation() {
  // @@protoc_insertion_point(destructor:SetOperation)
  SharedDtor();
}

void SetOperation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOperation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetOperation_descriptor_;
}

const SetOperation& SetOperation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManipulationOperations_2eproto();
  return *default_instance_;
}

SetOperation* SetOperation::default_instance_ = NULL;

SetOperation* SetOperation::New() const {
  return new SetOperation;
}

void SetOperation::Clear() {
  store_info_.Clear();
  primary_key_.Clear();
  value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SetOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StoreInfo store_info = 1;
      case 1: {
        if (tag == 10) {
         parse_store_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_store_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_store_info;
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .ColumnValue primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // repeated .ColumnValue value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SetOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SetOperation)
  return false;
#undef DO_
}

void SetOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SetOperation)
  // repeated .StoreInfo store_info = 1;
  for (int i = 0; i < this->store_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->store_info(i), output);
  }

  // repeated .ColumnValue primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  // repeated .ColumnValue value = 3;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:SetOperation)
}

::google::protobuf::uint8* SetOperation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetOperation)
  // repeated .StoreInfo store_info = 1;
  for (int i = 0; i < this->store_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->store_info(i), target);
  }

  // repeated .ColumnValue primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  // repeated .ColumnValue value = 3;
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetOperation)
  return target;
}

int SetOperation::ByteSize() const {
  int total_size = 0;

  // repeated .StoreInfo store_info = 1;
  total_size += 1 * this->store_info_size();
  for (int i = 0; i < this->store_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->store_info(i));
  }

  // repeated .ColumnValue primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  // repeated .ColumnValue value = 3;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOperation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetOperation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetOperation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetOperation::MergeFrom(const SetOperation& from) {
  GOOGLE_CHECK_NE(&from, this);
  store_info_.MergeFrom(from.store_info_);
  primary_key_.MergeFrom(from.primary_key_);
  value_.MergeFrom(from.value_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetOperation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOperation::CopyFrom(const SetOperation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOperation::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->store_info())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->value())) return false;
  return true;
}

void SetOperation::Swap(SetOperation* other) {
  if (other != this) {
    store_info_.Swap(&other->store_info_);
    primary_key_.Swap(&other->primary_key_);
    value_.Swap(&other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetOperation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetOperation_descriptor_;
  metadata.reflection = SetOperation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DeleteOperation::kStoreInfoFieldNumber;
const int DeleteOperation::kPrimaryKeyFieldNumber;
#endif  // !_MSC_VER

DeleteOperation::DeleteOperation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeleteOperation)
}

void DeleteOperation::InitAsDefaultInstance() {
}

DeleteOperation::DeleteOperation(const DeleteOperation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DeleteOperation)
}

void DeleteOperation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DeleteOperation::~DeleteOperation() {
  // @@protoc_insertion_point(destructor:DeleteOperation)
  SharedDtor();
}

void DeleteOperation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DeleteOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteOperation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DeleteOperation_descriptor_;
}

const DeleteOperation& DeleteOperation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManipulationOperations_2eproto();
  return *default_instance_;
}

DeleteOperation* DeleteOperation::default_instance_ = NULL;

DeleteOperation* DeleteOperation::New() const {
  return new DeleteOperation;
}

void DeleteOperation::Clear() {
  store_info_.Clear();
  primary_key_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DeleteOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeleteOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StoreInfo store_info = 1;
      case 1: {
        if (tag == 10) {
         parse_store_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_store_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_store_info;
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .ColumnValue primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeleteOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeleteOperation)
  return false;
#undef DO_
}

void DeleteOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeleteOperation)
  // repeated .StoreInfo store_info = 1;
  for (int i = 0; i < this->store_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->store_info(i), output);
  }

  // repeated .ColumnValue primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DeleteOperation)
}

::google::protobuf::uint8* DeleteOperation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeleteOperation)
  // repeated .StoreInfo store_info = 1;
  for (int i = 0; i < this->store_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->store_info(i), target);
  }

  // repeated .ColumnValue primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeleteOperation)
  return target;
}

int DeleteOperation::ByteSize() const {
  int total_size = 0;

  // repeated .StoreInfo store_info = 1;
  total_size += 1 * this->store_info_size();
  for (int i = 0; i < this->store_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->store_info(i));
  }

  // repeated .ColumnValue primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteOperation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DeleteOperation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DeleteOperation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DeleteOperation::MergeFrom(const DeleteOperation& from) {
  GOOGLE_CHECK_NE(&from, this);
  store_info_.MergeFrom(from.store_info_);
  primary_key_.MergeFrom(from.primary_key_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DeleteOperation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteOperation::CopyFrom(const DeleteOperation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteOperation::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->store_info())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  return true;
}

void DeleteOperation::Swap(DeleteOperation* other) {
  if (other != this) {
    store_info_.Swap(&other->store_info_);
    primary_key_.Swap(&other->primary_key_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DeleteOperation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DeleteOperation_descriptor_;
  metadata.reflection = DeleteOperation_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetOperation::kStoreInfoFieldNumber;
const int GetOperation::kPrimaryKeyFieldNumber;
const int GetOperation::kValueFieldNumber;
#endif  // !_MSC_VER

GetOperation::GetOperation()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetOperation)
}

void GetOperation::InitAsDefaultInstance() {
}

GetOperation::GetOperation(const GetOperation& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetOperation)
}

void GetOperation::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetOperation::~GetOperation() {
  // @@protoc_insertion_point(destructor:GetOperation)
  SharedDtor();
}

void GetOperation::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetOperation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOperation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetOperation_descriptor_;
}

const GetOperation& GetOperation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ManipulationOperations_2eproto();
  return *default_instance_;
}

GetOperation* GetOperation::default_instance_ = NULL;

GetOperation* GetOperation::New() const {
  return new GetOperation;
}

void GetOperation::Clear() {
  store_info_.Clear();
  primary_key_.Clear();
  value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetOperation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .StoreInfo store_info = 1;
      case 1: {
        if (tag == 10) {
         parse_store_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_store_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_store_info;
        if (input->ExpectTag(18)) goto parse_primary_key;
        break;
      }

      // repeated .ColumnValue primary_key = 2;
      case 2: {
        if (tag == 18) {
         parse_primary_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_primary_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primary_key;
        if (input->ExpectTag(26)) goto parse_value;
        break;
      }

      // repeated .ColumnValue value = 3;
      case 3: {
        if (tag == 26) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_value;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetOperation)
  return false;
#undef DO_
}

void GetOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetOperation)
  // repeated .StoreInfo store_info = 1;
  for (int i = 0; i < this->store_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->store_info(i), output);
  }

  // repeated .ColumnValue primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primary_key(i), output);
  }

  // repeated .ColumnValue value = 3;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->value(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GetOperation)
}

::google::protobuf::uint8* GetOperation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetOperation)
  // repeated .StoreInfo store_info = 1;
  for (int i = 0; i < this->store_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->store_info(i), target);
  }

  // repeated .ColumnValue primary_key = 2;
  for (int i = 0; i < this->primary_key_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primary_key(i), target);
  }

  // repeated .ColumnValue value = 3;
  for (int i = 0; i < this->value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->value(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetOperation)
  return target;
}

int GetOperation::ByteSize() const {
  int total_size = 0;

  // repeated .StoreInfo store_info = 1;
  total_size += 1 * this->store_info_size();
  for (int i = 0; i < this->store_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->store_info(i));
  }

  // repeated .ColumnValue primary_key = 2;
  total_size += 1 * this->primary_key_size();
  for (int i = 0; i < this->primary_key_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primary_key(i));
  }

  // repeated .ColumnValue value = 3;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->value(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOperation::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetOperation* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetOperation*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetOperation::MergeFrom(const GetOperation& from) {
  GOOGLE_CHECK_NE(&from, this);
  store_info_.MergeFrom(from.store_info_);
  primary_key_.MergeFrom(from.primary_key_);
  value_.MergeFrom(from.value_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetOperation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOperation::CopyFrom(const GetOperation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOperation::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->store_info())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->primary_key())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->value())) return false;
  return true;
}

void GetOperation::Swap(GetOperation* other) {
  if (other != this) {
    store_info_.Swap(&other->store_info_);
    primary_key_.Swap(&other->primary_key_);
    value_.Swap(&other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetOperation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetOperation_descriptor_;
  metadata.reflection = GetOperation_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
